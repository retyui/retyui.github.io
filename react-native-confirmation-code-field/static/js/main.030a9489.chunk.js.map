{"version":3,"sources":["webpack:///./src/propsDemos/ActiveColor.js","webpack:///./src/propsDemos/CellBorderWidth.js","webpack:///./src/propsDemos/InactiveColor.js","webpack:///./src/propsDemos/MaskSymbol.js","webpack:///./src/propsDemos/InputPosition.js","webpack:///./src/propsDemos/Size.js","webpack:///./src/propsDemos/Space.js","webpack:///./src/propsDemos/Variant.js","webpack:///./src/realDemo/DarkExample/index.js","webpack:///./src/realDemo/DarkExample/styles.js","webpack:///./src/realDemo/RedExample/index.js","webpack:///./src/realDemo/RedExample/styles.js","webpack:///./src/styles.js","webpack:///./src/serviceWorker.js","webpack:///./src/commonStyles.js","webpack:///./src/LinearGradient/index.web.js","webpack:///./src/index.js","webpack:///./src/App.js"],"names":["_react","default","createElement","_reactNativeWeb","View","style","styles","rootView","Text","typing","sectionDemo","preText","_reactNativeConfirmationCodeField","onFulfill","console","log","activeColor","concat","CodeFiled","defaultProps","_interopRequireDefault","__webpack_require__","_commonStyles","cellBorderWidth","inactiveColor","maskSymbol","inputPosition","size","space","variant","_interopRequireWildcard","_LinearGradient","_styles","horizontalGradient","start","x","y","end","upToDownGradient","DarkExample","onFinishCheckingCode","code","Alert","alert","text","cancelable","_this","codeInputRef","current","clear","cellProps","_ref","hasValue","input","inputNotEmpty","createRef","_extends2","colors","rootColors","linearGradient","inputLabel","inputSubLabel","ref","this","codeLength","keyboardType","containerProps","resetCode","buttonColors","nextButton","nextButtonText","Component","inputWrapStyle","StyleSheet","create","paddingHorizontal","paddingVertical","minHeight","paddingTop","paddingBottom","color","fontSize","fontWeight","height","marginTop","borderRadius","borderWidth","borderColor","backgroundColor","_objectSpread2","Platform","select","ios","shadowColor","shadowOffset","width","shadowOpacity","android","elevation","alignItems","justifyContent","RedExample","inputWrapper","compareWithCode","nextButtonArrow","transform","translateX","rotate","borderLeftWidth","borderBottomWidth","container","flex","config","navigator","publicUrl","URL","process","window","location","href","origin","addEventListener","swUrl","isLocalhost","fetch","then","response","contentType","headers","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","Boolean","hostname","match","register","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","borderBottomColor","padding","marginVertical","marginHorizontal","fontFamily","textAlign","marginBottom","props","_objectWithoutProperties2","_reactDom","_App","ReactDOM","render","document","getElementById","_ActiveColor","_CellBorderWidth","_InactiveColor","_MaskSymbol","_InputPosition","_Size","_Space","_Variant","_DarkExample","_RedExample","App","ScrollView"],"mappings":"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","file":"static/js/main.030a9489.chunk.js","sourcesContent":["import React from 'react';\nimport { View, Text } from 'react-native';\nimport CodeFiled from 'react-native-confirmation-code-field';\n\nimport styles from '../commonStyles';\n\nexport default function ActiveColor() {\n  return (\n    <View style={styles.rootView}>\n      <Text style={styles.typing}>activeColor?: string</Text>\n      <View style={styles.sectionDemo}>\n        <Text style={styles.preText}>{'activeColor=\"gold\"'}</Text>\n        <CodeFiled onFulfill={console.log} activeColor=\"gold\" />\n      </View>\n      <View style={styles.sectionDemo}>\n        <Text style={styles.preText}>{`activeColor=\"${\n          CodeFiled.defaultProps.activeColor\n        }\" (default)`}</Text>\n        <CodeFiled onFulfill={console.log} />\n      </View>\n      <View style={styles.sectionDemo}>\n        <Text style={styles.preText}>{'activeColor=\"pink\"'}</Text>\n        <CodeFiled onFulfill={console.log} activeColor=\"pink\" />\n      </View>\n    </View>\n  );\n}\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport CodeFiled from 'react-native-confirmation-code-field';\n\nimport styles from '../commonStyles';\n\nexport default function CellBorderWidth() {\n  return (\n    <View style={styles.rootView}>\n      <Text style={styles.typing}>cellBorderWidth?: number</Text>\n      <View style={styles.sectionDemo}>\n        <Text style={styles.preText}>\n          {`cellBorderWidthCellBorderWidthDemo={0.5}`}\n        </Text>\n        <CodeFiled onFulfill={console.log} cellBorderWidth={0.5} />\n      </View>\n      <View style={styles.sectionDemo}>\n        <Text style={styles.preText}>{`cellBorderWidth={${\n          CodeFiled.defaultProps.cellBorderWidth\n        }} (default)`}</Text>\n        <CodeFiled onFulfill={console.log} />\n      </View>\n      <View style={styles.sectionDemo}>\n        <Text style={styles.preText}>{`cellBorderWidth={4}`}</Text>\n        <CodeFiled onFulfill={console.log} cellBorderWidth={4} />\n      </View>\n    </View>\n  );\n}\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport CodeFiled from 'react-native-confirmation-code-field';\n\nimport styles from '../commonStyles';\n\nexport default function InactiveColor() {\n  return (\n    <View style={styles.rootView}>\n      <Text style={styles.typing}>inactiveColor?: string</Text>\n      <View style={styles.sectionDemo}>\n        <Text style={styles.preText}>{'inactiveColor=\"red\"'}</Text>\n        <CodeFiled onFulfill={console.log} inactiveColor=\"red\" />\n      </View>\n      <View style={styles.sectionDemo}>\n        <Text style={styles.preText}>\n          {`inactiveColor=\"${CodeFiled.defaultProps.inactiveColor}\" (default)`}\n        </Text>\n        <CodeFiled onFulfill={console.log} />\n      </View>\n      <View style={styles.sectionDemo}>\n        <Text style={styles.preText}>{'inactiveColor=\"blue\"'}</Text>\n        <CodeFiled onFulfill={console.log} inactiveColor=\"blue\" />\n      </View>\n    </View>\n  );\n}\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport CodeFiled from 'react-native-confirmation-code-field';\n\nimport styles from '../commonStyles';\n\nexport default function MaskSymbol() {\n  return (\n    <View style={styles.rootView}>\n      <Text style={styles.typing}>maskSymbol?: string</Text>\n      <View style={styles.sectionDemo}>\n        <Text style={styles.preText}>{'maskSymbol=\"*\"'}</Text>\n        <CodeFiled onFulfill={console.log} maskSymbol=\"*\" />\n      </View>\n      <View style={styles.sectionDemo}>\n        <Text style={styles.preText}>{'maskSymbol=\"👌\"'}</Text>\n        <CodeFiled onFulfill={console.log} maskSymbol=\"👌\" />\n      </View>\n      <View style={styles.sectionDemo}>\n        <Text style={styles.preText}>{`maskSymbol=\"😇\"`}</Text>\n        <CodeFiled onFulfill={console.log} maskSymbol=\"😇\" />\n      </View>\n    </View>\n  );\n}\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport CodeFiled from 'react-native-confirmation-code-field';\n\nimport styles from '../commonStyles';\n\nexport default function InputPosition() {\n  return (\n    <View style={styles.rootView}>\n      <Text style={styles.typing}>inputPosition?: ENUM()</Text>\n      <View style={styles.sectionDemo}>\n        <Text style={styles.preText}>{'inputPosition=\"left\"'}</Text>\n        <CodeFiled onFulfill={console.log} inputPosition=\"left\" />\n      </View>\n      <View style={styles.sectionDemo}>\n        <Text style={styles.preText}>{'inputPosition=\"right\"'}</Text>\n        <CodeFiled onFulfill={console.log} inputPosition=\"right\" />\n      </View>\n      <View style={styles.sectionDemo}>\n        <Text style={styles.preText}>{`inputPosition=\"${\n          CodeFiled.defaultProps.inputPosition\n        }\" (default)`}</Text>\n        <CodeFiled onFulfill={console.log} />\n      </View>\n      <View style={styles.sectionDemo}>\n        <Text style={styles.preText}>{'inputPosition=\"full-width\"'}</Text>\n        <CodeFiled onFulfill={console.log} inputPosition=\"full-width\" />\n      </View>\n    </View>\n  );\n}\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport CodeFiled from 'react-native-confirmation-code-field';\n\nimport styles from '../commonStyles';\n\nexport default function Size() {\n  return (\n    <View style={styles.rootView}>\n      <Text style={styles.typing}>size?: number</Text>\n      <View style={styles.sectionDemo}>\n        <Text style={styles.preText}>{`size={20}`}</Text>\n        <CodeFiled onFulfill={console.log} size={20} />\n      </View>\n      <View style={styles.sectionDemo}>\n        <Text style={styles.preText}>{`size={${\n          CodeFiled.defaultProps.size\n        } (default)`}</Text>\n        <CodeFiled onFulfill={console.log} />\n      </View>\n      <View style={styles.sectionDemo}>\n        <Text style={styles.preText}>{`size={60}`}</Text>\n        <CodeFiled onFulfill={console.log} size={60} />\n      </View>\n    </View>\n  );\n}\n","import React from 'react';\nimport { View, Text } from 'react-native';\nimport CodeFiled from 'react-native-confirmation-code-field';\n\nimport styles from '../commonStyles';\n\nexport default function Space() {\n  return (\n    <View style={styles.rootView}>\n      <Text style={styles.typing}>space?: number</Text>\n      <View style={styles.sectionDemo}>\n        <Text style={styles.preText}>{`space={1}`}</Text>\n        <CodeFiled onFulfill={console.log} space={1} />\n      </View>\n      <View style={styles.sectionDemo}>\n        <Text style={styles.preText}>{`space={${\n          CodeFiled.defaultProps.space\n        }} (default)`}</Text>\n        <CodeFiled onFulfill={console.log} />\n      </View>\n      <View style={styles.sectionDemo}>\n        <Text style={styles.preText}>{`space={32}`}</Text>\n        <CodeFiled onFulfill={console.log} space={32} />\n      </View>\n    </View>\n  );\n}\n","import React from 'react';\nimport { Text, View } from 'react-native';\nimport CodeFiled from 'react-native-confirmation-code-field';\n\nimport styles from '../commonStyles';\n\nexport default function Variant() {\n  return (\n    <View style={styles.rootView}>\n      <Text style={styles.typing}>variant?: ENUM()</Text>\n      <View style={styles.sectionDemo}>\n        <Text style={styles.preText}>{`variant=\"${\n          CodeFiled.defaultProps.variant\n        }\" (default)`}</Text>\n        <CodeFiled onFulfill={console.log} />\n      </View>\n      <View style={styles.sectionDemo}>\n        <Text style={styles.preText}>{'variant=\"border-circle\"'}</Text>\n        <CodeFiled onFulfill={console.log} variant=\"border-circle\" />\n      </View>\n      <View style={styles.sectionDemo}>\n        <Text style={styles.preText}>{'variant=\"border-b\"'}</Text>\n        <CodeFiled onFulfill={console.log} variant=\"border-b\" />\n      </View>\n      <View style={styles.sectionDemo}>\n        <Text style={styles.preText}>{'variant=\"clear\"'}</Text>\n        <CodeFiled onFulfill={console.log} variant=\"clear\" />\n      </View>\n    </View>\n  );\n}\n","import React, { Component, createRef } from 'react';\nimport { Alert, Text, View } from 'react-native';\nimport LinearGradient from '../../LinearGradient';\n\nimport CodeFiled from 'react-native-confirmation-code-field';\n\nimport styles from './styles';\n\nconst horizontalGradient = {\n  start: { x: 0, y: 0 },\n  end: { x: 1, y: 0 },\n};\n\nconst upToDownGradient = {\n  start: { x: 0, y: 0 },\n  end: { x: 1, y: 1 },\n};\n\nexport default class DarkExample extends Component {\n  onFinishCheckingCode = code => {\n    if (code === '1234') {\n      return Alert.alert('Confirmation Code', 'Successful!', [{ text: 'OK' }], {\n        cancelable: false,\n      });\n    }\n\n    Alert.alert('Confirmation Code', 'Code not match!', [{ text: 'OK' }], {\n      cancelable: false,\n    });\n\n    // If code does not match, clear input with: this.refs.codeInputRef1.clear()\n    this.codeInputRef.current.clear();\n  };\n\n  cellProps = ({ /*index, isFocused,*/ hasValue }) => {\n    if (hasValue) {\n      return {\n        style: [styles.input, styles.inputNotEmpty],\n      };\n    }\n\n    return {\n      style: styles.input,\n    };\n  };\n  static containerProps = { style: styles.inputWrapStyle };\n\n  static buttonColors = ['#8096ee', '#a571ff'];\n\n  static rootColors = ['#2f3d6c', '#161e3c'];\n\n  codeInputRef = createRef();\n\n  render() {\n    /*concept : https://dribbble.com/shots/4766183-Code-Verification-UI-Design */\n    return (\n      <LinearGradient\n        {...upToDownGradient}\n        colors={DarkExample.rootColors}\n        style={styles.linearGradient}\n      >\n        <View>\n          <Text style={styles.inputLabel}>Confirmation</Text>\n          <Text style={styles.inputSubLabel}>\n            Please enter the code sent we sent to the number + 375 (25) xxxx xx\n            13\n          </Text>\n          <CodeFiled\n            ref={this.codeInputRef}\n            inputPosition=\"full-width\"\n            variant=\"clear\"\n            codeLength={4}\n            size={60}\n            keyboardType=\"numeric\"\n            cellProps={this.cellProps}\n            containerProps={DarkExample.containerProps}\n            onFulfill={this.onFinishCheckingCode}\n          />\n          <Text style={styles.resetCode}>RESEND CODE</Text>\n          <LinearGradient\n            {...horizontalGradient}\n            colors={DarkExample.buttonColors}\n            style={styles.nextButton}\n          >\n            <Text style={styles.nextButtonText}>Confirm</Text>\n          </LinearGradient>\n        </View>\n      </LinearGradient>\n    );\n  }\n}\n","import { StyleSheet, Platform } from 'react-native';\n\nexport default StyleSheet.create({\n  linearGradient: {\n    paddingHorizontal: 20,\n    paddingVertical: 30,\n    minHeight: 555,\n  },\n\n  inputLabel: {\n    paddingTop: 100,\n    paddingBottom: 10,\n    color: '#fff',\n    fontSize: 28,\n    fontWeight: '700',\n  },\n  inputSubLabel: {\n    color: 'rgba(255,255,255,.7)',\n  },\n  inputWrapStyle: {\n    height: 60,\n    marginTop: 30,\n  },\n  input: {\n    borderRadius: 3,\n    borderWidth: 1,\n    borderColor: '#000',\n    color: '#fff',\n    backgroundColor: '#030c31',\n    fontSize: 30,\n    fontWeight: '700',\n  },\n  inputNotEmpty: {\n    backgroundColor: 'rgba(0,0,0,0)',\n  },\n  resetCode: {\n    marginTop: 25,\n    color: '#4b5ba4',\n  },\n  nextButton: {\n    marginTop: 80,\n    height: 70,\n    borderRadius: 2,\n    backgroundColor: '#fff',\n    ...Platform.select({\n      ios: {\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.2,\n      },\n      android: {\n        elevation: 5,\n      },\n    }),\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  nextButtonText: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: '700',\n  },\n});\n","import React, { Component } from 'react';\nimport { Alert, Text, View } from 'react-native';\nimport LinearGradient from '../../LinearGradient';\n\nimport CodeFiled from 'react-native-confirmation-code-field';\n\nimport styles from './styles';\n\nexport default class RedExample extends Component {\n  onFinishCheckingCode = code => {\n    if (code !== '123456') {\n      return Alert.alert(\n        'Confirmation Code',\n        'Code not match!',\n        [{ text: 'OK' }],\n        {\n          cancelable: false,\n        },\n      );\n    }\n\n    Alert.alert('Confirmation Code', 'Successful!', [{ text: 'OK' }], {\n      cancelable: false,\n    });\n  };\n\n  cellProps = ({ /*index, isFocused,*/ hasValue }) => {\n    if (hasValue) {\n      return {\n        style: [styles.input, styles.inputNotEmpty],\n      };\n    }\n    return {\n      style: styles.input,\n    };\n  };\n\n  containerProps = { style: styles.inputWrapStyle };\n\n  colors = ['#ff595f', '#e42959'];\n\n  render() {\n    /*concept : https://dribbble.com/shots/3246445-OTP-Screen-2-0*/\n    return (\n      <LinearGradient colors={this.colors} style={styles.linearGradient}>\n        <View style={styles.inputWrapper}>\n          <Text style={styles.inputLabel}>Verification Code</Text>\n          <Text style={styles.inputSubLabel}>\n            Please type the validation code sent\n          </Text>\n          <Text style={styles.inputSubLabel}>to + 375 (25) 666 00 00</Text>\n          <CodeFiled\n            variant=\"clear\"\n            codeLength={6}\n            compareWithCode=\"123456\"\n            keyboardType=\"numeric\"\n            cellProps={this.cellProps}\n            containerProps={this.containerProps}\n            onFulfill={this.onFinishCheckingCode}\n          />\n          <View style={styles.nextButton}>\n            <View style={styles.nextButtonArrow} />\n          </View>\n        </View>\n      </LinearGradient>\n    );\n  }\n}\n","import { StyleSheet, Platform } from 'react-native';\n\nexport default StyleSheet.create({\n  linearGradient: {\n    minHeight: 555,\n  },\n  inputWrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputLabel: {\n    paddingTop: 100,\n    paddingBottom: 10,\n    color: '#fff',\n    fontSize: 25,\n    fontWeight: '700',\n  },\n  inputSubLabel: {\n    color: '#fff',\n  },\n  inputWrapStyle: {\n    height: 50,\n    marginTop: 30,\n  },\n  input: {\n    height: 50,\n    width: 40,\n    borderRadius: 3,\n    color: '#fff',\n    backgroundColor: 'rgba(255,255,255,0.3)',\n  },\n  inputNotEmpty: {\n    backgroundColor: 'rgba(0,0,0,0)',\n  },\n  nextButton: {\n    marginTop: 100,\n    width: 70,\n    height: 70,\n    borderRadius: 80,\n    backgroundColor: '#fff',\n    ...Platform.select({\n      ios: {\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.2,\n      },\n      android: {\n        elevation: 5,\n      },\n    }),\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  nextButtonArrow: {\n    transform: [{ translateX: -3 }, { rotate: '45deg' }],\n    borderColor: '#ff595f',\n    width: 20,\n    height: 20,\n    borderWidth: 4,\n    borderLeftWidth: 0,\n    borderBottomWidth: 0,\n  },\n});\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { StyleSheet, Platform } from 'react-native';\n\nexport default StyleSheet.create({\n  rootView: {\n    backgroundColor: '#000',\n    minHeight: 500,\n    borderBottomWidth: 1,\n    borderBottomColor: 'gold',\n  },\n  sectionDemo: {\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#fff',\n    borderRadius: 2,\n    marginVertical: 10,\n    marginHorizontal: 20,\n  },\n  preText: {\n    fontFamily: Platform.select({\n      ios: 'Courier New',\n      android: 'monospace',\n    }),\n    color: '#fff',\n  },\n  typing: {\n    textAlign: 'center',\n    fontFamily: Platform.select({\n      ios: 'Courier New',\n      android: 'monospace',\n    }),\n    color: '#fff',\n    fontSize: 20,\n    marginTop: 15,\n    marginBottom: 10,\n  },\n});\n","import React from 'react';\nimport { View } from 'react-native';\n\n// eslint-disable-next-line\nconst LinearGradient = ({ start, end, colors, style, ...props }) => (\n  <View {...props} style={[style, { backgroundColor: colors[0] }]} />\n);\n\nexport default LinearGradient;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\nimport { ScrollView, View } from 'react-native';\n\nimport ActiveColorDemo from './propsDemos/ActiveColor';\nimport CellBorderWidthDemo from './propsDemos/CellBorderWidth';\nimport InactiveColorDemo from './propsDemos/InactiveColor';\nimport MaskSymbol from './propsDemos/MaskSymbol';\nimport PositionDemo from './propsDemos/InputPosition';\nimport SizeDemo from './propsDemos/Size';\nimport SpaceDemo from './propsDemos/Space';\nimport VariantDemo from './propsDemos/Variant';\n\nimport DarkExample from './realDemo/DarkExample';\nimport RedExample from './realDemo/RedExample';\n\nimport styles from './styles';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <View style={styles.container}>\n        <ScrollView>\n          <RedExample />\n          <DarkExample />\n\n          <MaskSymbol />\n          <ActiveColorDemo />\n          <InactiveColorDemo />\n          <CellBorderWidthDemo />\n          <SpaceDemo />\n          <SizeDemo />\n          <PositionDemo />\n          <VariantDemo />\n        </ScrollView>\n      </View>\n    );\n  }\n}\n"],"sourceRoot":""}